AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation StackSet for creating a VPC with NAT gateway, route tables, and subnet associations using Fn::Cidr for subnet CIDR calculation

Parameters:
  Env:
    Type: String
    Description: Environment name (e.g., dev, test, prod)
    Default: dev
    AllowedPattern: '^[a-zA-Z0-9-]+$'

  VpcCIDR:
    Type: String
    Description: CIDR block for the VPC
    Default: '10.0.0.0/16'

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Sub "${Env}-vpc"
        - Key: Environment
          Value: !Ref Env

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Env}-internet-gateway"
        - Key: Environment
          Value: !Ref Env

  # Attach Internet Gateway to VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Cidr [!Ref VpcCIDR, 4, 8]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${Env}-public-subnet"
        - Key: Environment
          Value: !Ref Env

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Cidr [!Ref VpcCIDR, 4, 8]]
      Tags:
        - Key: Name
          Value: !Sub "${Env}-private-subnet"
        - Key: Environment
          Value: !Ref Env

  # NAT Gateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Sub "${Env}-nat-gateway"
        - Key: Environment
          Value: !Ref Env

  # Route Table for Public Subnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-public-route-table"
        - Key: Environment
          Value: !Ref Env

  # Public Route in Route Table
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # Associate Public Subnet with Route Table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Route Table for Private Subnet
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Env}-private-route-table"
        - Key: Environment
          Value: !Ref Env

  # Private Route for NAT Gateway
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  # Associate Private Subnet with Private Route Table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: The ID of the VPC
    Value: !Ref VPC

  PublicSubnetId:
    Description: The ID of the public subnet
    Value: !Ref PublicSubnet

  PrivateSubnetId:
    Description: The ID of the private subnet
    Value: !Ref PrivateSubnet
